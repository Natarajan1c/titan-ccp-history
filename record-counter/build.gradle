apply plugin: 'application'
apply plugin: 'pmd'
apply plugin: 'checkstyle'
apply plugin: 'com.github.spotbugs'
apply plugin: 'eclipse'

sourceCompatibility = "1.10"
targetCompatibility = "1.10"

repositories {
    jcenter()
    maven {
    	url "https://oss.sonatype.org/content/repositories/snapshots/"
    }
}

dependencies {
    compile project(':')
    compile('org.industrial-devops:titan.ccp.model:0.0.1-SNAPSHOT') { changing = true }
    compile 'net.kieker-monitoring:kieker:1.14-SNAPSHOT'
    
    compile 'org.slf4j:slf4j-simple:1.6.1'
    compile 'redis.clients:jedis:2.9.0'

    // Use JUnit test framework
    testCompile 'junit:junit:4.12'
}

mainClassName = "titan.ccp.aggregation.recordcounter.RecordCounter"

pmd {
  ruleSetFiles = files("config/pmd.xml")
  ignoreFailures = false
  toolVersion = "6.7.0"
}

checkstyle {
  configDir = file("config")
  configFile = file("config/checkstyle.xml")
  maxWarnings = 0
  ignoreFailures = false
  toolVersion = "8.12"
}

spotbugs {
  excludeFilter = file("config/spotbugs-exclude-filter.xml")
  reportLevel = "low"
  effort = "max"
  ignoreFailures = false
  toolVersion = '3.1.7'
}

// Per default XML reports for SpotBugs are generated
// Include this to generate HTML reports
tasks.withType(com.github.spotbugs.SpotBugsTask) {
  reports {
    // Either HTML or XML reports can be activated
    html.enabled true
    xml.enabled false
  }
}

task checkstyle {
  dependsOn 'checkstyleMain'
  dependsOn 'checkstyleTest'
}

task pmd {
  dependsOn 'pmdMain'
  dependsOn 'pmdTest'
}

task spotbugs {
  dependsOn 'spotbugsMain'
  dependsOn 'spotbugsTest'
}

eclipse {
    classpath {
       downloadSources=true
       downloadJavadoc=true
    }
}